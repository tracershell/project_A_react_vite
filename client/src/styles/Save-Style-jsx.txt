// client/src/pages/admin/main/CPage.jsx
import React, { useEffect, useState } from 'react';
import axios from 'axios';
import styles from './CPage.module.css';

const CPage = () => {
  const [list, setList] = useState([]);
  const [selectedId, setSelectedId] = useState('');
  const [selected, setSelected] = useState({ date_value: '', number_value: '', name_value: '' });

  useEffect(() => {
    fetchList();
  }, []);

  const fetchList = async () => {
    try {
      const res = await axios.get('/api/admin/main/cpage/list');
      setList(res.data);
    } catch (err) {
      console.error('불러오기 실패:', err);
    }
  };

  const handleSelect = (e) => {
    const id = e.target.value;
    setSelectedId(id);
    const entry = list.find(item => item.id == id);
    if (entry) setSelected(entry);
  };

  const handleDelete = async () => {
    if (!selectedId) return alert('선택된 항목이 없습니다.');
    try {
      await axios.delete(`/api/admin/main/cpage/delete/${selectedId}`);
      alert('삭제되었습니다.');
      fetchList();
      setSelectedId('');
      setSelected({ date_value: '', number_value: '', name_value: '' });
    } catch (err) {
      console.error('삭제 실패:', err);
      alert('삭제 실패');
    }
  };

  const handleUpdate = async () => {
    if (!selectedId) return alert('선택된 항목이 없습니다.');
    try {
      await axios.put(`/api/admin/main/cpage/update/${selectedId}`, selected);
      alert('수정되었습니다.');
      fetchList();
    } catch (err) {
      console.error('수정 실패:', err);
      alert('수정 실패');
    }
  };

  return (
    <div className={styles.page}>
      <h2>C Page - DB 선택</h2>
      <div style={{ display: 'flex', gap: '1rem', marginBottom: '12px' }}>
        <div className={`${styles.formRow}`} style={{ width: '70rem'}}>
          <select value={selectedId} onChange={handleSelect}>
            <option value="">선택</option>
            {list.map(item => (
              <option key={item.id} value={item.id}>
                {item.name_value} ({item.date_value})
              </option>
            ))}
          </select>
          <input type="date" value={selected.date_value} onChange={(e) => setSelected({ ...selected, date_value: e.target.value })} />
          <label>Name</label>
          <input type="number" value={selected.number_value} onChange={(e) => setSelected({ ...selected, number_value: e.target.value })} />
          <label>Comment</label>
          <input type="text" value={selected.name_value} onChange={(e) => setSelected({ ...selected, name_value: e.target.value })} />
          <button type="button" onClick={handleUpdate}>수정</button>
          <button type="button" onClick={handleDelete} className={styles.deleteBtn}>삭제</button>
        </div>
        <div className={`${styles.formRow}`} style={{ width: '30rem'}}>
          <input type="date" value={selected.date_value} onChange={(e) => setSelected({ ...selected, date_value: e.target.value })} />
        </div>
      </div>
    </div>
  );
};

export default CPage;
